"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5097],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=o.createContext({}),s=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(d.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,h=m["".concat(d,".").concat(u)]||m[u]||p[u]||a;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5235:(e,t,n)=>{n.d(t,{n:()=>r});var o=n(7294);const r=e=>{let{title:t,url:n}=e;return o.createElement("video",{muted:!0,loop:!0,autoPlay:!0,controls:!1,playsInline:!0,title:t,width:"100%"},o.createElement("source",{src:n,type:"video/mp4"}))}},8884:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var o=n(7462),r=(n(7294),n(3905)),a=n(4996),i=n(5235);const l={id:"custom-handle",title:"Custom Handle",description:"Bottom Sheet custom handle.",keywords:["bottomsheet","bottom-sheet","bottom sheet","react-native","react native","ios","android","sheet","modal","presentation modal","reanimated"],image:"/img/bottom-sheet-preview.gif",slug:"/custom-handle"},d=void 0,s={unversionedId:"guides/custom-handle",id:"guides/custom-handle",title:"Custom Handle",description:"Bottom Sheet custom handle.",source:"@site/docs/guides/custom-handle.mdx",sourceDirName:"guides",slug:"/custom-handle",permalink:"/react-native-bottom-sheet/custom-handle",draft:!1,editUrl:"https://github.com/gorhom/react-native-bottom-sheet/edit/website/docs/guides/custom-handle.mdx",tags:[],version:"current",frontMatter:{id:"custom-handle",title:"Custom Handle",description:"Bottom Sheet custom handle.",keywords:["bottomsheet","bottom-sheet","bottom sheet","react-native","react native","ios","android","sheet","modal","presentation modal","reanimated"],image:"/img/bottom-sheet-preview.gif",slug:"/custom-handle"},sidebar:"packages",previous:{title:"BottomSheetTextInput",permalink:"/react-native-bottom-sheet/components/bottomsheettextinput"},next:{title:"Custom Backdrop",permalink:"/react-native-bottom-sheet/custom-backdrop"}},c={},m=[{value:"Example",id:"example",level:3}],p={toc:m},u="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To override the default handle, you will need to pass the prop ",(0,r.kt)("inlineCode",{parentName:"p"},"handleComponent")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"BottomSheet")," component."),(0,r.kt)("p",null,"When you provide your own handle component, it will receive these animated props ",(0,r.kt)("inlineCode",{parentName:"p"},"animatedIndex")," & ",(0,r.kt)("inlineCode",{parentName:"p"},"animatedPosition")," that indicates the position and the index of the sheet."),(0,r.kt)("p",null,"You can extend your custom handle props interface with the provided ",(0,r.kt)("inlineCode",{parentName:"p"},"BottomSheetHandleProps")," interface to expose ",(0,r.kt)("inlineCode",{parentName:"p"},"animatedIndex")," & ",(0,r.kt)("inlineCode",{parentName:"p"},"animatedPosition")," into your own interface."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)(i.n,{title:"React Native Bottom Sheet Custom Handle",url:(0,a.Z)("video/bottom-sheet-custom-handle-preview.mp4"),mdxType:"Video"}),(0,r.kt)("p",null,"Here is an example of a custom handle component, but first you will need to install ",(0,r.kt)("inlineCode",{parentName:"p"},"Redash"),":"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/wcandillon/react-native-redash"},"Redash"),": The React Native Reanimated and Gesture Handler Toolbelt.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-native-redash\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React, { useMemo } from "react";\nimport { StyleProp, StyleSheet, ViewStyle } from "react-native";\nimport { BottomSheetHandleProps } from "@gorhom/bottom-sheet";\nimport Animated, {\n  Extrapolate,\n  interpolate,\n  useAnimatedStyle,\n  useDerivedValue,\n} from "react-native-reanimated";\nimport { toRad } from "react-native-redash";\n\n// @ts-ignore\nexport const transformOrigin = ({ x, y }, ...transformations) => {\n  "worklet";\n  return [\n    { translateX: x },\n    { translateY: y },\n    ...transformations,\n    { translateX: x * -1 },\n    { translateY: y * -1 },\n  ];\n};\n\ninterface HandleProps extends BottomSheetHandleProps {\n  style?: StyleProp<ViewStyle>;\n}\n\nconst Handle: React.FC<HandleProps> = ({ style, animatedIndex }) => {\n  //#region animations\n  const indicatorTransformOriginY = useDerivedValue(() =>\n    interpolate(animatedIndex.value, [0, 1, 2], [-1, 0, 1], Extrapolate.CLAMP)\n  );\n  //#endregion\n\n  //#region styles\n  const containerStyle = useMemo(() => [styles.header, style], [style]);\n  const containerAnimatedStyle = useAnimatedStyle(() => {\n    const borderTopRadius = interpolate(\n      animatedIndex.value,\n      [1, 2],\n      [20, 0],\n      Extrapolate.CLAMP\n    );\n    return {\n      borderTopLeftRadius: borderTopRadius,\n      borderTopRightRadius: borderTopRadius,\n    };\n  });\n  const leftIndicatorStyle = useMemo(\n    () => ({\n      ...styles.indicator,\n      ...styles.leftIndicator,\n    }),\n    []\n  );\n  const leftIndicatorAnimatedStyle = useAnimatedStyle(() => {\n    const leftIndicatorRotate = interpolate(\n      animatedIndex.value,\n      [0, 1, 2],\n      [toRad(-30), 0, toRad(30)],\n      Extrapolate.CLAMP\n    );\n    return {\n      transform: transformOrigin(\n        { x: 0, y: indicatorTransformOriginY.value },\n        {\n          rotate: `${leftIndicatorRotate}rad`,\n        },\n        {\n          translateX: -5,\n        }\n      ),\n    };\n  });\n  const rightIndicatorStyle = useMemo(\n    () => ({\n      ...styles.indicator,\n      ...styles.rightIndicator,\n    }),\n    []\n  );\n  const rightIndicatorAnimatedStyle = useAnimatedStyle(() => {\n    const rightIndicatorRotate = interpolate(\n      animatedIndex.value,\n      [0, 1, 2],\n      [toRad(30), 0, toRad(-30)],\n      Extrapolate.CLAMP\n    );\n    return {\n      transform: transformOrigin(\n        { x: 0, y: indicatorTransformOriginY.value },\n        {\n          rotate: `${rightIndicatorRotate}rad`,\n        },\n        {\n          translateX: 5,\n        }\n      ),\n    };\n  });\n  //#endregion\n\n  // render\n  return (\n    <Animated.View\n      style={[containerStyle, containerAnimatedStyle]}\n      renderToHardwareTextureAndroid={true}\n    >\n      <Animated.View style={[leftIndicatorStyle, leftIndicatorAnimatedStyle]} />\n      <Animated.View\n        style={[rightIndicatorStyle, rightIndicatorAnimatedStyle]}\n      />\n    </Animated.View>\n  );\n};\n\nexport default Handle;\n\nconst styles = StyleSheet.create({\n  header: {\n    alignContent: "center",\n    alignItems: "center",\n    justifyContent: "center",\n    backgroundColor: "white",\n    paddingVertical: 14,\n    borderBottomWidth: 1,\n    borderBottomColor: "#fff",\n  },\n  indicator: {\n    position: "absolute",\n    width: 10,\n    height: 4,\n    backgroundColor: "#999",\n  },\n  leftIndicator: {\n    borderTopStartRadius: 2,\n    borderBottomStartRadius: 2,\n  },\n  rightIndicator: {\n    borderTopEndRadius: 2,\n    borderBottomEndRadius: 2,\n  },\n});\n')))}h.isMDXComponent=!0}}]);