"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9704],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),d=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return o.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=r,h=m["".concat(p,".").concat(u)]||m[u]||c[u]||a;return n?o.createElement(h,i(i({ref:t},s),{},{components:n})):o.createElement(h,i({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5235:(e,t,n)=>{n.d(t,{n:()=>r});var o=n(7294);const r=e=>{let{title:t,url:n}=e;return o.createElement("video",{muted:!0,loop:!0,autoPlay:!0,controls:!1,playsInline:!0,title:t,width:"100%"},o.createElement("source",{src:n,type:"video/mp4"}))}},5319:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var o=n(7462),r=(n(7294),n(3905)),a=n(4996),i=n(5235);const l={id:"keyboard-handling",title:"Keyboard Handling",description:"Keyboard handling with Bottom Sheet.",keywords:["bottomsheet","bottom-sheet","bottom sheet","react-native","react native","ios","android","sheet","modal","presentation modal","reanimated"],image:"/img/bottom-sheet-preview.gif",slug:"/keyboard-handling"},p=void 0,d={unversionedId:"guides/keyboard-handling",id:"guides/keyboard-handling",title:"Keyboard Handling",description:"Keyboard handling with Bottom Sheet.",source:"@site/docs/guides/keyboard-handling.mdx",sourceDirName:"guides",slug:"/keyboard-handling",permalink:"/awesome-react-native/keyboard-handling",draft:!1,editUrl:"https://github.com/gorhom/react-native-bottom-sheet/edit/website/docs/guides/keyboard-handling.mdx",tags:[],version:"current",frontMatter:{id:"keyboard-handling",title:"Keyboard Handling",description:"Keyboard handling with Bottom Sheet.",keywords:["bottomsheet","bottom-sheet","bottom sheet","react-native","react native","ios","android","sheet","modal","presentation modal","reanimated"],image:"/img/bottom-sheet-preview.gif",slug:"/keyboard-handling"},sidebar:"packages",previous:{title:"Detach Modal",permalink:"/awesome-react-native/detach-modal"},next:{title:"Pull To Refresh",permalink:"/awesome-react-native/pull-to-refresh"}},s={},m=[{value:"Example",id:"example",level:3}],c={toc:m},u="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Keyboard handling is one of the main feature of ",(0,r.kt)("inlineCode",{parentName:"p"},"BottomSheet v4"),", thanks to the effort of the community to spot issues, test and help to debug the implementation on both platform ",(0,r.kt)("inlineCode",{parentName:"p"},"iOS")," & ",(0,r.kt)("inlineCode",{parentName:"p"},"Android"),"."),(0,r.kt)("p",null,"To handle the keyboard appearance, I have simplified the approach by creating a pre-integrated ",(0,r.kt)("inlineCode",{parentName:"p"},"TextInput")," called ",(0,r.kt)("a",{parentName:"p",href:"./components/bottomsheettextinput"},"BottomSheetTextInput"),", which communicate internally to react to the keyboard appearance."),(0,r.kt)("p",null,"Also I have introduce two props to allow users to customize the handling, ",(0,r.kt)("a",{parentName:"p",href:"./props#keyboardbehavior"},"keyboardBehavior"),", ",(0,r.kt)("a",{parentName:"p",href:"./props#keyboardblurbehavior"},"keyboardBlurBehavior")," and ",(0,r.kt)("a",{parentName:"p",href:"./props#android_keyboardinputmode"},"android_keyboardInputMode")," that is only for ",(0,r.kt)("inlineCode",{parentName:"p"},"Android"),"."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"To use custom ",(0,r.kt)("inlineCode",{parentName:"p"},"TextInput"),", you will need to copy the ",(0,r.kt)("inlineCode",{parentName:"p"},"handleOnFocus")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"handleOnBlur")," from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gorhom/react-native-bottom-sheet/blob/master/src/components/bottomSheetTextInput/BottomSheetTextInput.tsx"},"BottomSheetTextInput")," into your own component.")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)(i.n,{title:"React Native Bottom Sheet Keyboard Handling",url:(0,a.Z)("video/bottom-sheet-keyboard-handling-preview.mp4"),mdxType:"Video"}),(0,r.kt)("p",null,"Here is an example of a simple keyboard handling:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React, { useMemo } from "react";\nimport { View, StyleSheet } from "react-native";\nimport BottomSheet, { BottomSheetTextInput } from "@gorhom/bottom-sheet";\n\nconst App = () => {\n  // variables\n  const snapPoints = useMemo(() => ["25%"], []);\n\n  // renders\n  return (\n    <View style={styles.container}>\n      <BottomSheet snapPoints={snapPoints}>\n        <View style={styles.contentContainer}>\n          <BottomSheetTextInput value="Awesome \ud83c\udf89" style={styles.textInput} />\n        </View>\n      </BottomSheet>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    backgroundColor: "grey",\n  },\n  textInput: {\n    alignSelf: "stretch",\n    marginHorizontal: 12,\n    marginBottom: 12,\n    padding: 12,\n    borderRadius: 12,\n    backgroundColor: "grey",\n    color: "white",\n    textAlign: "center",\n  },\n  contentContainer: {\n    flex: 1,\n    alignItems: "center",\n  },\n});\n\nexport default App;\n')))}h.isMDXComponent=!0}}]);