"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5310],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5235:(e,t,n)=>{n.d(t,{n:()=>o});var r=n(7294);const o=e=>{let{title:t,url:n}=e;return r.createElement("video",{muted:!0,loop:!0,autoPlay:!0,controls:!1,playsInline:!0,title:t,width:"100%"},r.createElement("source",{src:n,type:"video/mp4"}))}},2665:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var r=n(7462),o=(n(7294),n(3905)),a=n(4996),i=n(5235);const l={id:"pull-to-refresh",title:"Pull To Refresh",description:"Pull To Refresh with Bottom Sheet.",keywords:["bottomsheet","bottom-sheet","bottom sheet","react-native","react native","ios","android","sheet","modal","presentation modal","reanimated"],image:"/img/bottom-sheet-preview.gif",slug:"/pull-to-refresh"},s=void 0,p={unversionedId:"guides/pull-to-refresh",id:"guides/pull-to-refresh",title:"Pull To Refresh",description:"Pull To Refresh with Bottom Sheet.",source:"@site/docs/guides/pull-to-refresh.mdx",sourceDirName:"guides",slug:"/pull-to-refresh",permalink:"/awesome-react-native/pull-to-refresh",draft:!1,editUrl:"https://github.com/gorhom/react-native-bottom-sheet/edit/website/docs/guides/pull-to-refresh.mdx",tags:[],version:"current",frontMatter:{id:"pull-to-refresh",title:"Pull To Refresh",description:"Pull To Refresh with Bottom Sheet.",keywords:["bottomsheet","bottom-sheet","bottom sheet","react-native","react native","ios","android","sheet","modal","presentation modal","reanimated"],image:"/img/bottom-sheet-preview.gif",slug:"/pull-to-refresh"},sidebar:"packages",previous:{title:"Keyboard Handling",permalink:"/awesome-react-native/keyboard-handling"},next:{title:"Adding Shadow",permalink:"/awesome-react-native/adding-shadow"}},c={},m=[{value:"Example",id:"example",level:3}],u={toc:m},d="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Pull to refresh feature is enabled by default, and it will be activated on the top snap point provided. All you need to do is to provide ",(0,o.kt)("inlineCode",{parentName:"p"},"refreshing")," & ",(0,o.kt)("inlineCode",{parentName:"p"},"onRefresh")," to any of the ",(0,o.kt)("a",{parentName:"p",href:"./scrollables"},"Scrollables"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Currently ",(0,o.kt)("inlineCode",{parentName:"p"},"refreshControl")," is not supported, feel free to contribute to enable it \u2764\ufe0f")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)(i.n,{title:"React Native Bottom Sheet Pull to Refresh",url:(0,a.Z)("video/bottom-sheet-pull-to-refresh-preview.mp4"),mdxType:"Video"}),(0,o.kt)("p",null,"Here is an example of a simple pull to refresh:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import React, { useCallback, useMemo } from "react";\nimport { StyleSheet, View, Text } from "react-native";\nimport BottomSheet, { BottomSheetFlatList } from "@gorhom/bottom-sheet";\n\nconst App = () => {\n  // variables\n  const data = useMemo(\n    () =>\n      Array(50)\n        .fill(0)\n        .map((_, index) => `index-${index}`),\n    []\n  );\n  const snapPoints = useMemo(() => ["25%", "50%"], []);\n\n  // callbacks\n  const handleRefresh = useCallback(() => {\n    console.log("handleRefresh");\n  }, []);\n\n  // render\n  const renderItem = useCallback(\n    ({ item }) => (\n      <View style={styles.itemContainer}>\n        <Text>{item}</Text>\n      </View>\n    ),\n    []\n  );\n  return (\n    <View style={styles.container}>\n      <BottomSheet snapPoints={snapPoints}>\n        <BottomSheetFlatList\n          data={data}\n          keyExtractor={(i) => i}\n          renderItem={renderItem}\n          contentContainerStyle={styles.contentContainer}\n          refreshing={false}\n          onRefresh={handleRefresh}\n        />\n      </BottomSheet>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    backgroundColor: "white",\n  },\n  itemContainer: {\n    padding: 6,\n    margin: 6,\n    backgroundColor: "#eee",\n  },\n});\n\nexport default App;\n')))}f.isMDXComponent=!0}}]);