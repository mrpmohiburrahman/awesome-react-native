"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3760],{9175:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var r=i(6070),a=i(5710);const n={id:"web",title:"Web",description:"Web For React Native",image:"/img/bottom-sheet-preview.gif"},o=void 0,c={id:"web",title:"Web",description:"Web For React Native",source:"@site/docs/web.md",sourceDirName:".",slug:"/web",permalink:"/awesome-react-native/web",draft:!1,unlisted:!1,editUrl:"https://github.com/gorhom/react-native-bottom-sheet/edit/website/docs/web.md",tags:[],version:"current",frontMatter:{id:"web",title:"Web",description:"Web For React Native",image:"/img/bottom-sheet-preview.gif"},sidebar:"packages",previous:{title:"Utilities",permalink:"/awesome-react-native/utilities"},next:{title:"Backend",permalink:"/awesome-react-native/backend"}},s={},l=[];function h(e){const t={a:"a",li:"li",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/oney/react-native-webrtc",children:"react-native-webrtc \u26051805"})," - A WebRTC module for React Native."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/alinz/react-native-webview-bridge",children:"react-native-webview-bridge \u26051112"})," - React Native WebView Javascript Bridge"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/naoufal/react-native-safari-view",children:"react-native-safari-view \u2605387"})," - A React Native wrapper for Safari View Controller"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/lucasferreira/react-native-webview-android",children:"react-native-webview-android \u2605305"})," - Simple React Native Android module to use Android's WebView inside your app"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/KodersLab/react-native-for-web",children:"react-native-for-web \u2605247"})," - A set of classes and react components to make work your react-native app in a browser. (with some limitations obviously)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/PrestoDoctor/react-native-browser",children:"react-native-browser \u2605107"})," - Full-featured web browser module for React Native apps, based on TOWebViewController"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/jordansexton/react-native-webview-crosswalk",children:"react-native-webview-crosswalk \u260588"})," - Crosswalk's WebView for React Native on Android"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/lazaronixon/react-native-turbolinks",children:"react-native-turbolinks \u260572"})," - React Native adapter for building hybrid apps with Turbolinks 5"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/ivanph/react-native-webintent",children:"react-native-webintent \u260553"})," - React native android module to open links in the default browser"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/danrigsby/react-native-web-container",children:"react-native-web-container \u260536"})," - A wrapper around the react native WebView to add autoHeight, scrub html, etc"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/proyecto26/react-native-inappbrowser",children:"react-native-inappbrowser-reborn \u260530"})," - InAppBrowser for React Native (Android & iOS)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/johanneslumpe/react-native-browser-polyfill",children:"react-native-browser-polyfill \u260529"})," - A collection of polyfills for the react-native Javascript environment."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/beefe/react-native-cookiemanager",children:"react-native-cookiemanager \u260519"})," - react-native cookie manager library."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/Intellicode/react-native-bridgeable-webview",children:"react-native-bridgeable-webview \u260516"})," - A react-native webview with bridge to react-native code"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/labithiotis/react-native-html-render",children:"react-native-html2native \u26053"})," - A html render for react-native"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/beefe/react-native-webview",children:"react-native-webview \u26053"})," - android webview for react-native"]}),"\n"]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},5710:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var r=i(758);const a={},n=r.createContext(a);function o(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);