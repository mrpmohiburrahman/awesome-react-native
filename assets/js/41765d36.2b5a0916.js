"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3993],{8840:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var i=a(6070),r=a(5710);const n={id:"storage",title:"Storage",description:"Storage For React Native"},s=void 0,o={id:"storage",title:"Storage",description:"Storage For React Native",source:"@site/docs/storage.md",sourceDirName:".",slug:"/storage",permalink:"/awesome-react-native/storage",draft:!1,unlisted:!1,editUrl:"https://github.com/gorhom/react-native-bottom-sheet/edit/website/docs/storage.md",tags:[],version:"current",frontMatter:{id:"storage",title:"Storage",description:"Storage For React Native"},sidebar:"packages",previous:{title:"Geolocation",permalink:"/awesome-react-native/geolocation"},next:{title:"Internationalization",permalink:"/awesome-react-native/internationalization"}},c={},l=[];function h(e){const t={a:"a",li:"li",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/pubkey/rxdb",children:"RxDB \u260512797"})," - A realtime Database for JavaScript Applications."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/Nozbe/WatermelonDB",children:"WatermelonDB \u26054649"})," - \ud83c\udf49 Next-gen database for powerful React and React Native apps that scales to 10,000s of records and remains fast."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/realm/realm-js",children:"realm \u26053184"})," - An alternative mobile database to SQLite & key-value stores."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/sunnylqm/react-native-storage",children:"react-native-storage \u26052115"})," - This is a local storage wrapper for both react-native(AsyncStorage) and browser(localStorage). ES6/babel is needed."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/andpor/react-native-sqlite-storage",children:"react-native-sqlite-storage \u26051508"})," - SQLite3 bindings for React Native (Android & iOS)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/jasonmerino/react-native-simple-store",children:"react-native-simple-store \u2605731"})," - A minimalistic wrapper around React Native's AsyncStorage."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/thewei/react-native-store",children:"react-native-store \u2605561"})," - A simple database base on react-native AsyncStorage."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/darkrishabh/react-native-db-models",children:"react-native-db-models \u2605168"})," - Local DB Models for React Native Apps"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/noradaiko/react-native-sqlite-2",children:"react-native-sqlite-2 \u2605106"})," - SQLite3 Native Plugin for React Native for both Android and iOS"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/fraserxu/react-native-couchbase-lite",children:"react-native-couchbase-lite \u2605105"})," - couchbase lite binding for react-native"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/Gabrn/react-native-persistent-job",children:"react-native-persistent-job \u260572"})," - Run async tasks that retry after a crash, connection loss or exception"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/noradaiko/pouchdb-adapter-react-native-sqlite",children:"pouchdb-adapter-react-native-sqlite \u260549"})," - PouchDB adapter using ReactNative SQLite as its backing store"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/carbureted/react-native-pouchdb",children:"react-native-pouchdb \u260538"})," - Run pouchdb in React Native!"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/tradle/react-native-level-fs",children:"react-native-level-fs \u260520"})," - fs for react-native using level-filesystem and asyncstorage-down"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/remobile/react-native-mongoose",children:"react-native-mongoose \u260517"})," - A AsyncStorage based mongoose like storage for react-native"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/andymatuschak/react-native-leveldown",children:"react-native-leveldown"})," - Native LevelDB bindings for React Native"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/artxty/typed-async-storage",children:"typed-async-storage"})," - A wrapper for creating a schema for AsyncStorage and validation using React prop-types."]}),"\n"]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},5710:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>o});var i=a(758);const r={},n=i.createContext(r);function s(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);